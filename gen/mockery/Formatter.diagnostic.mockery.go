// Code generated by mockery v2.50.4. DO NOT EDIT.

package mockery

import (
	mock "github.com/stretchr/testify/mock"
	diagnostic "github.com/walteh/go-tmpl-typer/pkg/diagnostic"
)

// MockFormatter_diagnostic is an autogenerated mock type for the Formatter type
type MockFormatter_diagnostic struct {
	mock.Mock
}

type MockFormatter_diagnostic_Expecter struct {
	mock *mock.Mock
}

func (_m *MockFormatter_diagnostic) EXPECT() *MockFormatter_diagnostic_Expecter {
	return &MockFormatter_diagnostic_Expecter{mock: &_m.Mock}
}

// Format provides a mock function with given fields: diagnostics
func (_m *MockFormatter_diagnostic) Format(diagnostics *diagnostic.Diagnostics) ([]byte, error) {
	ret := _m.Called(diagnostics)

	if len(ret) == 0 {
		panic("no return value specified for Format")
	}

	var r0 []byte
	var r1 error
	if rf, ok := ret.Get(0).(func(*diagnostic.Diagnostics) ([]byte, error)); ok {
		return rf(diagnostics)
	}
	if rf, ok := ret.Get(0).(func(*diagnostic.Diagnostics) []byte); ok {
		r0 = rf(diagnostics)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	if rf, ok := ret.Get(1).(func(*diagnostic.Diagnostics) error); ok {
		r1 = rf(diagnostics)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockFormatter_diagnostic_Format_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Format'
type MockFormatter_diagnostic_Format_Call struct {
	*mock.Call
}

// Format is a helper method to define mock.On call
//   - diagnostics *diagnostic.Diagnostics
func (_e *MockFormatter_diagnostic_Expecter) Format(diagnostics interface{}) *MockFormatter_diagnostic_Format_Call {
	return &MockFormatter_diagnostic_Format_Call{Call: _e.mock.On("Format", diagnostics)}
}

func (_c *MockFormatter_diagnostic_Format_Call) Run(run func(diagnostics *diagnostic.Diagnostics)) *MockFormatter_diagnostic_Format_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*diagnostic.Diagnostics))
	})
	return _c
}

func (_c *MockFormatter_diagnostic_Format_Call) Return(_a0 []byte, _a1 error) *MockFormatter_diagnostic_Format_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockFormatter_diagnostic_Format_Call) RunAndReturn(run func(*diagnostic.Diagnostics) ([]byte, error)) *MockFormatter_diagnostic_Format_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockFormatter_diagnostic creates a new instance of MockFormatter_diagnostic. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockFormatter_diagnostic(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockFormatter_diagnostic {
	mock := &MockFormatter_diagnostic{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
